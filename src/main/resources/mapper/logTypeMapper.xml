<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yunsenlin.web.base.dao.LogTypeMapper">
  <resultMap id="BaseResultMap" type="cn.yunsenlin.web.base.model.LogType">
    <id column="log_code" jdbcType="VARCHAR" property="logCode" />
    <result column="log_name" jdbcType="VARCHAR" property="logName" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      log_code, log_name
    from log_type
    where log_code = #{logCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from log_type
    where log_code = #{logCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.yunsenlin.web.base.model.LogType">
    insert into log_type (log_code, log_name)
    values (#{logCode,jdbcType=VARCHAR}, #{logName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.yunsenlin.web.base.model.LogType">
    insert into log_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        log_code,
      </if>
      <if test="logName != null">
        log_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logCode != null">
        #{logCode,jdbcType=VARCHAR},
      </if>
      <if test="logName != null">
        #{logName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yunsenlin.web.base.model.LogType">
    update log_type
    <set>
      <if test="logName != null">
        log_name = #{logName,jdbcType=VARCHAR},
      </if>
    </set>
    where log_code = #{logCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yunsenlin.web.base.model.LogType">
    update log_type
    set log_name = #{logName,jdbcType=VARCHAR}
    where log_code = #{logCode,jdbcType=VARCHAR}
  </update>
  <select id="getX" resultMap="BaseResultMap">
    select
      log_code, log_name
    from log_type
    where log_type='X'
  </select>
  <select id="getG" resultMap="BaseResultMap">
    select
    log_code, log_name
    from log_type
    where log_type='G'
  </select>
</mapper>